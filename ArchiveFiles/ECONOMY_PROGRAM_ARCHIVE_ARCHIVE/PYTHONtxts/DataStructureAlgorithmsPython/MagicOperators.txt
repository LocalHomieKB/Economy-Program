Method Defintion Operator Description
__add__(self,y) x+y The addition of two objects. The type of x determines which add
operator is called.
__contains__(self,y) y in x When x is a collection you can test to see if y is in it.
__eq__(self,y) x == y Returns True or False depending on the values of x and y.
__ge__(self,y) x >= y Returns True or False depending on the values of x and y.
__getitem__(self,y) x[y] Returns the item at the yth position in x.
__gt__(self,y) x>y Returns True or False depending on the values of x and y.
__hash__(self) hash(x) Returns an integral value for x.
__int__(self) int(x) Returns an integer representation of x.
__iter__(self) for v in x Returns an iterator object for the sequence x.
__le__(self,y) x <= y Returns True or False depending on the values of x and y.
__len__(self) len(x) Returns the size of x where x has some length attribute.
__lt__(self,y) x<y Returns True or False depending on the values of x and y.
__mod__(self,y) x%y Returns the value of x modulo y. This is the remainder of x/y.
__mul__(self,y) x*y Returns the product of x and y.
__ne__(self,y) x != y Returns True or False depending on the values of x and y.
__neg__(self) -x Returns the unary negation of x.

__repr__(self) repr(x) Returns a string version of x suitable to be evaluated by the eval
function.
#Necessary for re-evaluation by the computer

__setitem__(self,i,y) x[i] = y Sets the item at the ith position in x to y.
__str__(self) str(x) Return a string representation of x suitable for user-level interaction.
__sub__(self,y) x-y The difference of two objects.

